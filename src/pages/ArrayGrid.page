<apex:page id="page" controller="ArrayGridcontroller">
    
  <apex:stylesheet value="{!URLFOR($Resource.ExtJS, 'resources/css/ext-all.css')}" />
  <apex:includeScript value="{!URLFOR($Resource.ExtJS, 'ext-all.js')}" />
  
  <script type="text/javascript">
    Ext.require([
    'Ext.grid.*',
    'Ext.data.*',
    'Ext.util.*',
    'Ext.state.*'
    ]);
    
    // Define Company entity
    // Null out built in convert functions for performance *because the raw data is known to be valid*
    // Specifying defaultValue as undefined will also save code. *As long as there will always be values in the data, or the app tolerates undefined field values*
    Ext.define('Company', {
        extend: 'Ext.data.Model',
        fields: [
           {name: 'Id'},
           {name: 'Name'},
           {name: 'Phone'},
           {name: 'OwnerId'}
        ],
        idProperty: 'company'
    });
    
    Ext.onReady(function() {
        Ext.QuickTips.init();
       
        //document.getElementById('gridexample').style.visibility = 'hidden';    
                
        // setup the state provider, all state information will be saved to a cookie
        Ext.state.Manager.setProvider(Ext.create('Ext.state.CookieProvider'));
        
        Ext.create('Ext.Button', 
        {
            text: 'Visible',
            enableToggle: true,
            handler: function () {
                if(this.pressed)
                {
                    document.getElementById('gridexample').style.visibility = 'hidden';
                    this.setText('Hidden');          
                } else {
                    document.getElementById('gridexample').style.visibility = 'visible';
                    this.setText('Visible');          
                }
            },
            renderTo: buttonexample
        });
    
        // sample static data for the store
        var myData = {!accounts};
    
        // create the data store
        var store = Ext.create('Ext.data.Store', {
            model: 'Company',
            data: myData
        });
    
        // create the Grid
        var grid = Ext.create('Ext.grid.Panel', {
            store: store,
            stateful: true,
            collapsible: true,
            multiSelect: true,
            stateId: 'stateGrid',
            columns: [
                {
                    text     : 'Id',
                    width    : 100,
                    sortable : false,
                    dataIndex: 'Id'
                },
                {
                    text     : 'Company Name',
                    flex     : 1,
                    sortable : true,
                    dataIndex: 'Name'
                },
                {
                    text     : 'Phone',
                    width    : 100,
                    sortable : true,
                    dataIndex: 'Phone'
                },
                {
                    text     : 'Owner Id',
                    width    : 75,
                    sortable : false,
                    dataIndex: 'OwnerId'
                },
                {
                xtype: 'actioncolumn',
                width: 50,
                items: [{
                    icon   : '/resource/1385631611000/jweatherall__ExtJS/shared/icons/fam/delete.gif',  // Use a URL in the icon config
                    tooltip: 'Sell stock',
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = store.getAt(rowIndex);
                        alert("Sell " + rec.get('company'));
                    }
                }, {
                    getClass: function(v, meta, rec) {          // Or return a class from a function
                        if (rec.get('change') < 0) {
                            this.items[1].tooltip = 'Hold stock';
                            return 'alert-col';
                        } else {
                            this.items[1].tooltip = 'Buy stock';
                            return 'buy-col';
                        }
                    },
                    handler: function(grid, rowIndex, colIndex) {
                        var rec = store.getAt(rowIndex);
                        alert((rec.get('change') < 0 ? "Hold " : "Buy ") + rec.get('company'));
                    }
                }]
            }
            ],
            height: 350,
            width: 600,
            title: 'Array Grid',
            renderTo: 'gridexample',
            viewConfig: {
                stripeRows: true,
                enableTextSelection: true
            }
        });
    });
       
  </script>
  <apex:form id="form">  
      <div id="buttonexample"/>
      <div id="gridexample"/>
  </apex:form>
</apex:page>